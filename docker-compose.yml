version: '2.4'

## Port Assignments:
##  See .env file

## Container debugging: 
# 1. append the following lines to desired container 
# 2. boot up the container using `docker-compose up -d`
# 3 run `docker exec -it <container-name> bash` to start interactive shell
# 
#    tty: true
#    stdin_open: true
#    entrypoint: bash

## Utility for booting up placeholder page:
# `docker run --hostname openhim-placeholder --network shared-health-record_sedish --name openhim-placeholder -e MESSAGE=OPENHIM-PLACEHOLDER -e PORT=3000 -d docker.io/sroze/landing-page:latest`

services:
  ###
  # nginx reverse proxy
  # TODO: set up to use non-root user. See https://www.rockyourcode.com/run-docker-nginx-as-non-root-user/
  # TODO: Run letsencrypt as docker container: https://hub.docker.com/r/certbot/certbot/
  ###
  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/letsencrypt
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - nginx-data:/var/www
    networks:
      - sedish

  certbot:
    image: certbot/dns-route53
    container_name: certbot
    entrypoint: "certbot certonly -n --agree-tos --email pmanko@uw.edu -d sedish-haiti.org -d '*.sedish-haiti.org' --dns-route53 --preferred-challenges=dns"
    environment:
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    volumes:
    - certs:/etc/letsencrypt
    - letsencrypt:/var/lib/letsencrypt
    networks:
    - sedish

  ###
  # OpenCR
  ###
  opencr:
    container_name: opencr
    hostname: opencr
    #image: intrahealth/opencr:latest
    image: intrahealth/opencr:fdb3d44
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    networks:
      - sedish
    volumes:
      - ./configs/opencr/config_docker_template.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/privkey3.pem:/src/server/serverCertificates/server_key.pem
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/fullchain3.pem:/src/server/serverCertificates/server_cert.pem   
  
  opencr-fhir:
    image: "hapiproject/hapi:latest"
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    volumes:
      - cr-data:/data/hapi
    env_file:
      - configs/opencr-hapi/.env
    networks:
      - sedish
  
  opencr-es:
    container_name: es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    ports:
      - 9200
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - sedish

  ###
  # SHR
  ###
  shr:
    container_name: shr
    hostname: shr
    image: ghcr.io/i-tech-uw/shared-health-record:v0.1.2
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
    networks:
      - sedish
    volumes:
      - ./configs/shr/config_docker_template.json:/app/config/config_docker.json
      - ./configs/shr/mediator_docker.json:/app/config/mediator_docker.json
  
  shr-fhir:
    image: "hapiproject/hapi:latest"
    container_name: shr-fhir
    hostname: shr-fhir
    restart: unless-stopped
    volumes:
      - hapi-data:/data/hapi
    env_file:
      - configs/shr/.env
    networks:
      - sedish
  
  ###
  # iSantePlus
  ###
  isanteplus-demo:
    container_name: isanteplus-demo
    hostname: isanteplus-demo
    image: ghcr.io/isanteplus/isanteplus:latest
    restart: unless-stopped
    env_file:
        - ./openmrs/isanteplus_demo/openmrs-server.env
    volumes:
      - openmrs-data:/openmrs/data
    networks:
      - sedish

  isanteplus-test:
    container_name: isanteplus-test
    hostname: isanteplus-test
    build: ./docker/openmrs-server
    restart: unless-stopped
    env_file:
        - ./openmrs/isanteplus_test/openmrs-server.env
    volumes:
      - ./openmrs/isanteplus_test/distribution:/openmrs/distribution
      - openmrs-data2:/openmrs/data
    networks:
      - sedish
    ports:
      - 8002:8000
      - 8091:8080
  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://${MONGO_USER}:${MONGO_PW}@openhim-db.chijnl5rwr2c.eu-central-1.docdb.amazonaws.com:27017/openhim?retryWrites=false"
      mongo_atnaUrl: "mongodb://${MONGO_USER}:${MONGO_PW}@openhim-db.chijnl5rwr2c.eu-central-1.docdb.amazonaws.com:27017/openhim?retryWrites=false"
      NODE_ENV: "development"
    ports:
      - 8080:8080
      - 5000:5000
      - 5001:5001
    volumes:
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/fullchain3.pem:/usr/src/app/resources/certs/default/cert.pem
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/privkey3.pem:/usr/src/app/resources/certs/default/key.pem
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/fullchain3.pem:/etc/letsencrypt/live/openhim.jembi.org/cert.pem
      - /home/ubuntu/local/letsencrypt/archive/sedish-haiti.org/privkey3.pem:/etc/letsencrypt/live/openhim.jembi.org/key.pem
    healthcheck:
      test: "curl -sSk https://openhim-core:8080/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - sedish

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    volumes:
      - ./configs/openhim-console/default.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - sedish
    # tty: true
    # stdin_open: true
    # entrypoint: bash

volumes:
  esdata:
    driver: local
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  openmrs-data:
    driver: local
  openmrs-data2:
    driver: local
  mongo-data:
    driver: local
  shr:
    driver: local
  hapi-data:
    driver: local
  data011:
    driver: local
  data012:
    driver: local
  data013:
    driver: local    
  hapi-data:
    driver: local
  cr-data:
    driver: local
  certs:
    driver: local
  letsencrypt: 
    driver: local
  nginx-data: 
    driver: local
networks:
  sedish:
